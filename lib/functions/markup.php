<?php
/**
 * Equity Framework
 *
 * WARNING: This file is part of the core Equity Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Equity\Markup
 * @author  IDX, LLC
 * @license GPL-2.0+
 * @link    
 */

/**
 * Output markup conditionally.
 *
 * Supported keys for `$args` are:
 *
 *  - `html5` (`sprintf()` pattern markup),
 *  - `context` (name of context),
 *  - `echo` (default is true).
 *
 * If the child theme supports HTML5, then this function will output the `html5` value, with a call to `equity_attr()`
 * with the same context added in. 
 *
 * Applies a `equity_markup_{context}` filter early to allow shortcutting the function.
 *
 * Applies a `equity_markup_{context}_output` filter at the end.
 *
 * @since 1.0
 * 
 * @uses equity_attr()  Contextual attributes.
 *
 * @param array $args Array of arguments.
 *
 * @return string Markup.
 */
function equity_markup( $args = array() ) {
	
	$defaults = array(
		'html5'   => '',
		'context' => '',
		'open'    => '',
		'close'   => '',
		'content' => '',
		'echo'    => true,
		'params'  => array(),
	);

	$args = wp_parse_args( $args, $defaults );

	/**
	 * Filter to short circuit the markup API.
	 *
	 * @since 1.0
	 *
	 * @param bool  false Flag indicating short curcuit content.
	 * @param array $args Array with markup arguments.
	 *
	 * @see equity_markup $args Array.
	 */
	$pre = apply_filters( "equity_markup_{$args['context']}", false, $args );
	if ( false !== $pre ) {

		if ( ! $args['echo'] ) {
			return $pre;
		}

		echo $pre;
		return null;

	}

	if ( $args['html5'] ) {

		$tag = $args['context'] ? sprintf( $args['html5'], equity_attr( $args['context'] ) ) : $args['html5'];

		/**
		 * Legacy contextual filter to modify 'html5' output markup.
		 *
		 * @since 1.0
		 *
		 * @param string $tag  HTML tag being processed by the API.
		 * @param array  $args Array with markup arguments.
		 *
		 * @see equity_markup $args Array.
		 */
		$tag = $args['context'] ? apply_filters( "equity_markup_{$args['context']}_output", $tag, $args ) : $tag;

		if ( ! $args['echo'] ) {
			return $tag;
		}

		echo $tag;
		return null;

	}

	// Add attributes to open tag.
	if ( $args['context'] ) {

		$open = $args['open'] ? sprintf( $args['open'], equity_attr( $args['context'], array(), $args ) ) : '';

		/**
		 * Contextual filter to modify 'open' markup.
		 *
		 * @since 1.7.3
		 *
		 * @param string $open HTML tag being processed by the API.
		 * @param array  $args Array with markup arguments.
		 *
		 * @see equity_markup $args Array.
		 */
		$open = apply_filters( "equity_markup_{$args['context']}_open", $open, $args );

		/**
		 * Contextual filter to modify 'close' markup.
		 *
		 * @since 1.7.3
		 *
		 * @param string $close HTML tag being processed by the API.
		 * @param array  $args  Array with markup arguments.
		 *
		 * @see equity_markup $args Array.
		 */
		$close = apply_filters( "equity_markup_{$args['context']}_close", $args['close'], $args );

	} else {

		$open = $args['open'];
		$close = $args['close'];

	}

	if ( $open || $args['content'] ) {
		/**
		 * Non-contextual filter to modify 'open' markup.
		 *
		 * @since 1.7.3
		 *
		 * @param string $open HTML tag being processed by the API.
		 * @param array  $args Array with markup arguments.
		 *
		 * @see equity_markup $args Array.
		 */
		$open = apply_filters( 'equity_markup_open', $open, $args );
	}

	if ( $close || $args['content'] ) {
		/**
		 * Non-contextual filter to modify 'close' markup.
		 *
		 * @since 1.7.3
		 *
		 * @param string $open HTML tag being processed by the API.
		 * @param array  $args Array with markup arguments.
		 *
		 * @see equity_markup $args Array.
		 */
		$close = apply_filters( 'equity_markup_close', $close, $args );
	}

	if ( $args['echo'] ) {
		echo $open . $args['content'] . $close;

		return null;
	} else {
		return $open . $args['content'] . $close;
	}

}

/**
 * Merge array of attributes with defaults, and apply contextual filter on array.
 *
 * The contextual filter is of the form `equity_attr_{context}`.
 *
 * @since 1.0
 *
 * @param  string $context    The context, to build filter name.
 * @param  array  $attributes Optional. Extra attributes to merge with defaults.
 *
 * @return array Merged and filtered attributes.
 */
function equity_parse_attr( $context, $attributes = array() ) {

	$defaults = array(
		'class' => sanitize_html_class( $context ),
	);

	$attributes = wp_parse_args( $attributes, $defaults );

	//* Contextual filter
	return apply_filters( "equity_attr_{$context}", $attributes, $context );

}

/**
 * Build list of attributes into a string and apply contextual filter on string.
 *
 * The contextual filter is of the form `equity_attr_{context}_output`.
 *
 * @since 1.0
 *
 * @uses equity_parse_attr() Merge array of attributes with defaults, and apply contextual filter on array.
 *
 * @param  string $context    The context, to build filter name.
 * @param  array  $attributes Optional. Extra attributes to merge with defaults.
 *
 * @return string String of HTML attributes and values.
 */
function equity_attr( $context, $attributes = array() ) {

	$attributes = equity_parse_attr( $context, $attributes );

	$output = '';

	//* Cycle through attributes, build tag attribute string
	foreach ( $attributes as $key => $value ) {
		if ( ! $value ) {
			continue;
		} elseif ( true === $value ) {
			$output .= sprintf( '%s ', esc_html( $key ) );
		} else {
			$output .= sprintf( '%s="%s" ', esc_html( $key ), esc_attr( $value ) );
		}
	}

	$output = apply_filters( "equity_attr_{$context}_output", $output, $attributes, $context );

	return trim( $output );

}

add_filter( 'equity_attr_head', 'equity_attributes_head' );
/**
 * Add attributes for head element.
 *
 * @since 1.6.4
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_head( $attributes ) {

	$attributes['class'] = '';

	if ( ! is_front_page() ) {
		return $attributes;
	}

	$attributes['itemscope'] = true;
	$attributes['itemtype']  = 'http://schema.org/WebSite';

	return $attributes;

}

add_filter( 'equity_attr_body', 'equity_attributes_body' );
/**
 * Add attributes for body element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_body( $attributes ) {

	$attributes['class']     = join( ' ', get_body_class() );
	$attributes['itemscope'] = true;
	$attributes['itemtype']  = 'http://schema.org/WebPage';

	//* Search results pages
	if ( is_search() ) {
		$attributes['itemtype'] = 'http://schema.org/SearchResultsPage';
	}

	return $attributes;

}

add_filter( 'equity_attr_top-header', 'equity_attributes_top_header' );
/**
 * Add attributes for top header element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_top_header( $attributes ) {

	$attributes['class'] .= 'top-header contain-to-grid';

	return $attributes;

}

add_filter( 'equity_attr_site-header', 'equity_attributes_header' );
/**
 * Add attributes for site header element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_header( $attributes ) {

	$attributes['class']     = 'site-header';
	$attributes['role']      = 'banner';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/WPHeader';

	return $attributes;

}

add_filter( 'equity_attr_title-area', 'equity_attributes_title_area' );
/**
 * Add attributes for title area element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_title_area( $attributes ) {

	$attributes['class'] .= ' columns small-12 large-5';

	return $attributes;

}

add_filter( 'equity_attr_site-title', 'equity_attributes_site_title' );
/**
 * Add attributes for site title element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_site_title( $attributes ) {

	$attributes['itemprop'] = 'headline';

	return $attributes;

}

add_filter( 'equity_attr_site-description', 'equity_attributes_site_description' );
/**
 * Add attributes for site description element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_site_description( $attributes ) {

	$attributes['itemprop'] = 'description';

	return $attributes;

}

add_filter( 'equity_attr_header-widget-area', 'equity_attributes_header_widget_area' );
/**
 * Add attributes for header widget area element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_header_widget_area( $attributes ) {

	$attributes['class'] .= ' widget-area columns small-12 large-7';

	return $attributes;

}

add_filter( 'equity_attr_nav-header-right', 'equity_attributes_header_nav' );
/**
 * Add typical attributes for navigation elements.
 *
 * Used for header right nav.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_header_nav( $attributes ) {

	$attributes['class']    .= ' columns small-12 large-7';
	$attributes['role']      = 'navigation';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/SiteNavigationElement';

	return $attributes;

}

add_filter( 'equity_attr_nav-top-header-bar', 'equity_attributes_nav_top_bar' );
add_filter( 'equity_attr_nav-main', 'equity_attributes_nav_top_bar' );
/**
 * Add typical attributes for navigation elements. Includes Foundation top-bar class.
 *
 * Used for main navigation.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_nav_top_bar( $attributes ) {

	$attributes['class']     .= ' top-bar';
	$attributes['role']      = 'navigation';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/SiteNavigationElement';

	return $attributes;

}

add_filter( 'equity_attr_nav-link-wrap', 'equity_attributes_nav_link_wrap' );
/**
 * Add attributes for the span wrap around navigation item links.
 *
 * @since 1.7.3
 *
 * @param array $attributes Existing attributes for span wrap around navigation item links.
 * @return array Amended attributes for span wrap around navigation item links.
 */
function equity_attributes_nav_link_wrap( $attributes ) {

	$attributes['class'] = '';
	$attributes['itemprop'] = 'name';

	return $attributes;

}

add_filter( 'equity_attr_nav-link', 'equity_attributes_nav_link' );
/**
 * Add attributes for the navigation item links.
 *
 * Since we're utilizing a filter that plugins might also want to filter, don't overwrite class here.
 *
 * @since 1.7.3
 *
 * @param array $attributes Existing attributes for navigation item links.
 * @return array Amended attributes for navigation item links.
 */
function equity_attributes_nav_link( $attributes ) {

	$class = str_replace( 'nav-link', '', $attributes['class'] );

	$attributes['class']    = $class;
	$attributes['itemprop'] = 'url';

	return $attributes;

}

add_filter( 'equity_attr_content-sidebar-wrap', 'equity_attributes_content_sidebar_wrap' );
/**
 * Add attributes for content-sidebar-wrap element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_content_sidebar_wrap( $attributes ) {

	$attributes['class'] .= ' row';

	return $attributes;

}

add_filter( 'equity_attr_structural-wrap', 'equity_attributes_structural_wrap' );
/**
 * Add attributes for structural wrap element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_structural_wrap( $attributes ) {

	$attributes['class'] .= ' wrap row';

	return $attributes;

}

add_filter( 'equity_attr_content', 'equity_attributes_content' );
/**
 * Add attributes for main content element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @uses equity_site_layout() Return the site layout for different contexts.
 *
 * @return array Amended attributes.
 */
function equity_attributes_content( $attributes ) {

	$site_layout = equity_site_layout();

	if ($site_layout == 'full-width-content' ) {
		$attributes['class'] .= ' columns small-12 large-12';
	} elseif ($site_layout == 'sidebar-content' ) {
		$attributes['class'] .= ' columns small-12 medium-8 large-8 medium-push-4 large-push-4';
	} else {
		$attributes['class'] .= ' columns small-12 medium-8 large-8';
	}

	return $attributes;

}

add_filter( 'equity_attr_entry', 'equity_attributes_entry' );
/**
 * Add attributes for entry element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry( $attributes ) {

	$attributes['class'] = join( ' ', get_post_class() );

	if ( ! is_main_query() && ! equity_is_blog_template() ) {
		return $attributes;
	}

	$attributes['itemscope'] = true;
	$attributes['itemtype']  = 'http://schema.org/CreativeWork';

	return $attributes;

}

add_filter( 'equity_attr_entry-meta-before-content', 'equity_attributes_entry_meta' );
add_filter( 'equity_attr_entry-meta-after-content', 'equity_attributes_entry_meta' );
/**
 * Add attributes for entry meta element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_meta( $attributes ) {

	$attributes['class'] .= ' entry-meta';

	return $attributes;

}

add_filter( 'equity_attr_entry-image', 'equity_attributes_entry_image' );
/**
 * Add attributes for entry image element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_image( $attributes ) {

	$attributes['class']    = equity_get_option( 'image_alignment' ) . ' post-image entry-image';
	$attributes['itemprop'] = 'image';

	return $attributes;

}

add_filter( 'equity_attr_entry-image-widget', 'equity_attributes_entry_image_widget' );
/**
 * Add attributes for entry image element shown in a widget.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_image_widget( $attributes ) {

	$attributes['class']    = 'entry-image attachment-' . get_post_type();
	$attributes['itemprop'] = 'image';

	return $attributes;

}

add_filter( 'equity_attr_entry-author', 'equity_attributes_entry_author' );
/**
 * Add attributes for author element for an entry.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_author( $attributes ) {

	$attributes['itemprop']  = 'author';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/Person';

	return $attributes;

}

add_filter( 'equity_attr_entry-author-link', 'equity_attributes_entry_author_link' );
/**
 * Add attributes for entry author link element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_author_link( $attributes ) {

	$attributes['itemprop'] = 'url';
	$attributes['rel']      = 'author';

	return $attributes;

}

add_filter( 'equity_attr_entry-author-name', 'equity_attributes_entry_author_name' );
/**
 * Add attributes for entry author name element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_author_name( $attributes ) {

	$attributes['itemprop'] = 'name';

	return $attributes;

}

add_filter( 'equity_attr_entry-time', 'equity_attributes_entry_time' );
/**
 * Add attributes for time element for an entry.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_time( $attributes ) {

	$attributes['itemprop'] = 'datePublished';
	$attributes['datetime'] = get_the_time( 'c' );

	return $attributes;

}

add_filter( 'equity_attr_entry-modified-time', 'equity_attributes_entry_modified_time' );
/**
 * Add attributes for modified time element for an entry.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_modified_time( $attributes ) {

	$attributes['itemprop'] = 'dateModified';
	$attributes['datetime'] = get_the_modified_time( 'c' );

	return $attributes;

}

add_filter( 'equity_attr_entry-title', 'equity_attributes_entry_title' );
/**
 * Add attributes for entry title element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_title( $attributes ) {

	$attributes['itemprop'] = 'headline';

	return $attributes;

}

add_filter( 'equity_attr_entry-content', 'equity_attributes_entry_content' );
/**
 * Add attributes for entry content element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_content( $attributes ) {

	$attributes['itemprop'] = 'text';

	return $attributes;

}

add_filter( 'equity_attr_archive-pagination', 'equity_attributes_pagination' );
add_filter( 'equity_attr_entry-pagination', 'equity_attributes_pagination' );
add_filter( 'equity_attr_adjacent-entry-pagination', 'equity_attributes_pagination' );
add_filter( 'equity_attr_comments-pagination', 'equity_attributes_pagination' );
/**
 * Add attributes for pagination.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_pagination( $attributes ) {

	$attributes['class'] .= ' navigation pagination';
	$attributes['role']  = 'navigation';

	return $attributes;

}

add_filter( 'equity_attr_entry-comments', 'equity_attributes_entry_comments' );
/**
 * Add attributes for entry comments element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_entry_comments( $attributes ) {

	$attributes['id'] = 'comments';

	return $attributes;

}

add_filter( 'equity_attr_comment', 'equity_attributes_comment' );
/**
 * Add attributes for single comment element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_comment( $attributes ) {

	$attributes['class']     = '';
	$attributes['itemprop']  = 'comment';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/Comment';

	return $attributes;

}

add_filter( 'equity_attr_comment-author', 'equity_attributes_comment_author' );
/**
 * Add attributes for comment author element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_comment_author( $attributes ) {

	$attributes['itemprop']  = 'creator';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/Person';

	return $attributes;

}

add_filter( 'equity_attr_comment-author-link', 'equity_attributes_comment_author_link' );
/**
 * Add attributes for comment author link element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_comment_author_link( $attributes ) {

	$attributes['rel']      = 'external nofollow';
	$attributes['itemprop'] = 'url';

	return $attributes;

}

add_filter( 'equity_attr_comment-time', 'equity_attributes_comment_time' );
/**
 * Add attributes for comment time element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_comment_time( $attributes ) {

	$attributes['datetime'] = esc_attr( get_comment_time( 'c' ) );
	$attributes['itemprop'] = 'dateCreated';

	return $attributes;

}

add_filter( 'equity_attr_comment-time-link', 'equity_attributes_comment_time_link' );
/**
 * Add attributes for comment time link element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_comment_time_link( $attributes ) {

	$attributes['itemprop'] = 'url';

	return $attributes;

}

add_filter( 'equity_attr_comment-content', 'equity_attributes_comment_content' );
/**
 * Add attributes for comment content container.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_comment_content( $attributes ) {

	$attributes['itemprop'] = 'comment';

	return $attributes;

}

add_filter( 'equity_attr_sidebar-primary', 'equity_attributes_sidebar_primary' );
/**
 * Add attributes for primary sidebar element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @uses equity_site_layout() Return the site layout for different contexts.
 *
 * @return array Amended attributes.
 */
function equity_attributes_sidebar_primary( $attributes ) {

	$site_layout = equity_site_layout();

	if ($site_layout == 'sidebar-content' ) {
		$attributes['class'] .= ' sidebar columns widget-area small-12 medium-4 large-4 medium-pull-8 large-pull-8';
	} else {
		$attributes['class'] .= ' sidebar columns widget-area small-12 medium-4 large-4';
	}

	// $attributes['class']     .= ' sidebar widget-area columns small-12 large-4';
	$attributes['role']      = 'complementary';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/WPSideBar';

	return $attributes;

}

add_filter( 'equity_attr_footer-widgets', 'equity_attributes_footer_widgets' );
/**
 * Add attributes for footer-widgets element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_footer_widgets( $attributes ) {

	$attributes['class'] .= '';

	return $attributes;

}

add_filter( 'equity_attr_site-footer', 'equity_attributes_site_footer' );
/**
 * Add attributes for site footer element.
 *
 * @since 1.0
 *
 * @param array $attributes Existing attributes.
 *
 * @return array Amended attributes.
 */
function equity_attributes_site_footer( $attributes ) {

	// $attributes['class']     .= ' row';
	$attributes['id']        = 'site-footer';
	$attributes['role']      = 'contentinfo';
	$attributes['itemscope'] = 'itemscope';
	$attributes['itemtype']  = 'http://schema.org/WPFooter';

	return $attributes;

}

/**
 * Add ID markup to the elements to jump to.
 *
 * @since 1.7.3
 */
function equity_skiplinks_markup() {

	add_filter( 'equity_attr_nav-main', 'equity_skiplinks_attr_nav_main' );
	add_filter( 'equity_attr_nav-header-right', 'equity_skiplinks_attr_nav_header_right' );
	add_filter( 'equity_attr_content', 'equity_skiplinks_attr_content' );
	add_filter( 'equity_attr_sidebar-primary', 'equity_skiplinks_attr_sidebar_primary' );
	add_filter( 'equity_attr_footer-widgets', 'equity_skiplinks_attr_footer_widgets' );

}

/**
 * Add ID markup to main navigation.
 *
 * @since 1.7.3
 *
 * @param array $attributes Existing attributes for main navigation element.
 * @return array Amended attributes for main navigation element.
 */
function equity_skiplinks_attr_nav_main( $attributes ) {

	$attributes['id']         = 'equity-nav-main';
	$attributes['aria-label'] = esc_html__( 'Main navigation', 'equity' );

	return $attributes;

}

/**
 * Add ID markup to header right navigation.
 *
 * @since 1.7.3
 *
 * @param array $attributes Existing attributes for header right navigation element.
 * @return array Amended attributes for header right navigation element.
 */
function equity_skiplinks_attr_nav_header_right( $attributes ) {

	$attributes['id']         = 'equity-nav-header-right';
	$attributes['aria-label'] = esc_html__( 'Header Right navigation', 'equity' );

	return $attributes;

}

/**
 * Add ID markup to main content area.
 *
 * @since 1.7.3
 *
 * @param array $attributes Existing attributes for `main` element.
 * @return array Amended attributes for `main` element.
 */
function equity_skiplinks_attr_content( $attributes ) {

	$attributes['id'] = 'equity-content';

	return $attributes;

}

/**
 * Add ID markup to primary sidebar.
 *
 * @since 1.7.3
 *
 * @param array $attributes Existing attributes for primary sidebar element.
 * @return array Amended attributes for primary sidebar element.
 */
function equity_skiplinks_attr_sidebar_primary( $attributes ) {

	$attributes['id'] = 'equity-sidebar-primary';

	return $attributes;

}

/**
 * Add ID markup to footer widget area.
 *
 * @since 1.7.3
 *
 * @param array $attributes Existing attributes for footer widget area element.
 * @return array Amended attributes for footer widget area element.
 */
function equity_skiplinks_attr_footer_widgets( $attributes ) {

	$attributes['id'] = 'equity-footer-widgets';

	return $attributes;

}
